{"version":3,"sources":["utils/functions.js","utils/constants.js","components/PartyParticipantsTable/index.js","components/Chart/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["compareByName","a","b","name","compareByIsMature","isMature","compareByStatus","status","SORT_BY","STATUSES","PartyParticipantsTable","partyParticipants","sortPartyParticpants","removeParticipant","changeName","changeStatus","changeIsMature","onClick","map","index","key","className","value","onChange","event","target","style","marginLeft","role","aria-label","Charts","ChartByAdultness","ChartByStatus","memo","useState","activeIndex","setActiveIndex","data","setData","useEffect","prepareData","children","adults","forEach","participant","width","aspect","activeShape","renderActiveShape","innerRadius","outerRadius","fill","onMouseEnter","present","absent","undecided","unanswered","props","RADIAN","Math","PI","cx","cy","midAngle","startAngle","endAngle","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","d","stroke","r","number","getText","toFixed","Header","getInitialState","JSON","parse","localStorage","getItem","App","setName","setIsMature","setStatus","setPartyParticipants","undefined","setSortBy","isReverse","setIsReverse","setItem","stringify","id","onSubmit","preventDefault","prevState","handleAddPartyParticipant","form","htmlFor","e","type","length","nextSortBy","unupdatedPartyParticipants","copiedPartyParticipants","sort","reverse","nextState","splice","newState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3dc44b60.chunk.js","sourcesContent":["export const compareByName = (a, b) => {\n  if (a.name < b.name) {\n    return -1;\n  }\n  if (a.name > b.name) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const compareByIsMature = (a, b) => {\n  return a.isMature === b.isMature ? 0 : a.isMature === \"true\" ? -1 : 1;\n};\n\nexport const compareByStatus = (a, b) => {\n  if (a.status < b.status) {\n    return -1;\n  }\n  if (a.status > b.status) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const getText = (number) => {\n  switch (number) {\n    case 1:\n      return \"1 osoba\";\n\n    case 2:\n    case 3:\n    case 4:\n      return `${number} osoby`;\n\n    default:\n      return `${number} osób`;\n  }\n};\n","export const SORT_BY = {\n  NAME: \"NAME\",\n  IS_MATURE: \"IS_MATURE\",\n  STATUS: \"STATUS\",\n};\n\nexport const STATUSES = {\n  PRZYJDZIE: \"Przyjdzie\",\n  NIE_PRZYJDZIE: \"Nie przyjdzie\",\n  NIE_WIE: \"Nie wie\",\n  NIE_ODPISAŁ: \"Nie odpisał\",\n};\n","import React from \"react\";\nimport \"./index.scss\";\nimport { SORT_BY } from \"../../utils/constants\";\n\nconst PartyParticipantsTable = ({\n  partyParticipants,\n  sortPartyParticpants,\n  removeParticipant,\n  changeName,\n  changeStatus,\n  changeIsMature,\n}) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Nr</th>\n          <th onClick={() => sortPartyParticpants(SORT_BY.NAME)}>Uczestnik</th>\n          <th onClick={() => sortPartyParticpants(SORT_BY.IS_MATURE)}>\n            Dorosły\n          </th>\n          <th onClick={() => sortPartyParticpants(SORT_BY.STATUS)}>Status</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {partyParticipants.map(({ name, isMature, status }, index) => (\n          <tr key={index}>\n            <td className=\"table-cell__number\">{index + 1}</td>\n            <td>\n              <input\n                value={name}\n                onChange={(event) => changeName(event.target.value, index)}\n              />\n            </td>\n            <td>\n              <select\n                value={isMature}\n                onChange={(event) => changeIsMature(event.target.value, index)}\n              >\n                <option value={true}>TAK</option>\n                <option value={false}>NIE</option>\n              </select>\n            </td>\n            <td>\n              <select\n                value={status}\n                onChange={(event) => changeStatus(event.target.value, index)}\n              >\n                <option value=\"Przyjdzie\">Przyjdzie</option>\n                <option value=\"Nie odpisał\">Nie odpisał</option>\n                <option value=\"Nie wie\">Nie wie</option>\n                <option value=\"Nie przyjdzie\">Nie przyjdzie</option>\n              </select>\n\n              <button\n                className=\"button-delete\"\n                onClick={() => removeParticipant(index)}\n              >\n                <span\n                  style={{ marginLeft: \"20px\" }}\n                  role=\"img\"\n                  aria-label=\"Usuń\"\n                >\n                  &#10060;\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PartyParticipantsTable;\n","import React, { useState, useEffect, memo } from \"react\";\nimport { PieChart, Pie, Sector, ResponsiveContainer } from \"recharts\";\nimport \"./index.scss\";\nimport { getText } from \"../../utils/functions\";\nimport { STATUSES } from \"../../utils/constants\";\n\nconst Charts = ({ partyParticipants }) => {\n  return (\n    <div className=\"container-summary\">\n      <div className=\"text-summary\">Podsumowanie</div>\n      <ChartByAdultness partyParticipants={partyParticipants} />\n      <ChartByStatus partyParticipants={partyParticipants} />\n    </div>\n  );\n};\n\nexport default Charts;\n\nconst ChartByAdultness = memo(({ partyParticipants }) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setData(prepareData(partyParticipants));\n  }, [partyParticipants]);\n\n  const prepareData = (partyParticipants) => {\n    const children = { name: \"Dzieci\", value: 0 };\n    const adults = { name: \"Dorośli\", value: 0 };\n\n    [...partyParticipants].forEach((participant, index) => {\n      if (participant.isMature === \"true\") {\n        adults.value = adults.value + 1;\n      } else {\n        children.value = children.value + 1;\n      }\n    });\n\n    return [{ ...children }, { ...adults }];\n  };\n\n  const onPieEnter = (data, index) => {\n    setActiveIndex(index);\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" aspect={2}>\n      <PieChart>\n        <Pie\n          activeIndex={activeIndex}\n          activeShape={renderActiveShape}\n          data={data}\n          innerRadius={\"50%\"}\n          outerRadius={\"55%\"}\n          fill=\"dodgerblue\"\n          onMouseEnter={onPieEnter}\n        />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n});\n\nconst ChartByStatus = memo(({ partyParticipants }) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setData(prepareData(partyParticipants));\n  }, [partyParticipants]);\n\n  const prepareData = (partyParticipants) => {\n    const present = { name: \"Przyjdą\", value: 0 };\n    const absent = { name: \"Nie przyjdą\", value: 0 };\n    const undecided = { name: \"Nie wiedzą\", value: 0 };\n    const unanswered = { name: \"Nie odpisali\", value: 0 };\n\n    [...partyParticipants].forEach((participant, index) => {\n      switch (participant.status) {\n        case STATUSES.PRZYJDZIE:\n          present.value++;\n          break;\n\n        case STATUSES.NIE_PRZYJDZIE:\n          absent.value++;\n          break;\n\n        case STATUSES.NIE_WIE:\n          undecided.value++;\n          break;\n\n        case STATUSES.NIE_ODPISAŁ:\n          unanswered.value++;\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    return [present, absent, undecided, unanswered];\n  };\n\n  const onPieEnter = (data, index) => {\n    setActiveIndex(index);\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" aspect={2}>\n      <PieChart>\n        <Pie\n          activeIndex={activeIndex}\n          activeShape={renderActiveShape}\n          data={data}\n          innerRadius={\"50%\"}\n          outerRadius={\"55%\"}\n          fill=\"dodgerblue\"\n          onMouseEnter={onPieEnter}\n        />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n});\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill=\"white\">\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill=\"#ffeb3b\"\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill=\"white\"\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={\"white\"}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={\"white\"} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"white\"\n      >\n        {getText(value)}\n      </text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"white\"\n      >\n        {` ${(percent * 100).toFixed(2)}%`}\n      </text>\n    </g>\n  );\n};\n","import React from \"react\";\nimport \"./index.scss\";\n\nconst Header = () => {\n  return (\n    <div>\n      <h1>Witaj w centrum dowodzenia imprezy z okazji 18tych urodzin Pączka</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport {\n  compareByName,\n  compareByIsMature,\n  compareByStatus,\n} from \"./utils/functions\";\nimport PartyParticipantsTable from \"./components/PartyParticipantsTable\";\nimport { SORT_BY } from \"./utils/constants\";\nimport Charts from \"./components/Chart\";\nimport Header from \"./components/Header\";\n\nconst initialState = [\n  { name: \"Dominik\", isMature: true, status: \"Przyjdzie\" },\n  { name: \"Mateusz\", isMature: true, status: \"Przyjdzie\" },\n  { name: \"Danuta\", isMature: true, status: \"Przyjdzie\" },\n  { name: \"Marek\", isMature: true, status: \"Nie wie\" },\n  { name: \"Wiktor\", isMature: false, status: \"Nie odpisał\" },\n];\n\nconst getInitialState = () => {\n  return JSON.parse(localStorage.getItem(\"partyParticipants\")) || [];\n};\n\nexport default function App() {\n  const [name, setName] = useState(\"\");\n  const [isMature, setIsMature] = useState(\"false\");\n  const [status, setStatus] = useState(\"Przyjdzie\");\n  const [partyParticipants, setPartyParticipants] = useState(getInitialState);\n  const [sortBy, setSortBy] = useState(undefined);\n  const [isReverse, setIsReverse] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\n      \"partyParticipants\",\n      JSON.stringify(partyParticipants)\n    );\n  }, [partyParticipants]);\n\n  const sortPartyParticpants = (nextSortBy) => {\n    setPartyParticipants((unupdatedPartyParticipants) => {\n      let copiedPartyParticipants = [...unupdatedPartyParticipants];\n\n      switch (nextSortBy) {\n        case SORT_BY.NAME:\n          copiedPartyParticipants.sort(compareByName);\n          break;\n\n        case SORT_BY.IS_MATURE:\n          copiedPartyParticipants.sort(compareByIsMature);\n          break;\n\n        case SORT_BY.STATUS:\n          copiedPartyParticipants.sort(compareByStatus);\n          break;\n\n        default:\n          break;\n      }\n\n      if (isReverse) {\n        setIsReverse(false);\n        return copiedPartyParticipants.reverse();\n      } else {\n        setIsReverse(true);\n        return copiedPartyParticipants;\n      }\n    });\n\n    setSortBy(nextSortBy);\n  };\n\n  const handleAddPartyParticipant = (event) => {\n    event.preventDefault();\n    setPartyParticipants((prevState) => [\n      ...prevState,\n      { name, isMature, status },\n    ]);\n    setName(\"\");\n  };\n\n  const removeParticipant = (index) => {\n    setPartyParticipants((prevState) => {\n      const nextState = [...prevState];\n      nextState.splice(index, 1);\n      return nextState;\n    });\n  };\n\n  const changeName = (name, index) => {\n    setPartyParticipants((prevState) => {\n      const nextState = [...prevState];\n      nextState[index].name = name;\n      return nextState;\n    });\n  };\n\n  const changeStatus = (status, index) => {\n    setPartyParticipants((prevState) => {\n      const newState = [...prevState];\n      newState[index].status = status;\n      return newState;\n    });\n  };\n\n  const changeIsMature = (isMature, index) => {\n    setPartyParticipants((prevState) => {\n      const newState = [...prevState];\n      newState[index].isMature = isMature;\n      return newState;\n    });\n  };\n\n  return (\n    <>\n      <Header />\n      <form id=\"form\" onSubmit={(event) => handleAddPartyParticipant(event)}>\n        <fieldset form=\"form\">\n          <legend>Dodaj nowego uczestnika 18 urodzin Sylwii </legend>\n\n          <div id=\"flex-container\">\n            <label htmlFor=\"input-participant\">Imię i nazwisko: </label>\n            <input\n              id=\"input-participant\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n\n            <label htmlFor=\"select-isMature\">Jest dorosły? </label>\n            <select\n              id=\"select-isMature\"\n              value={isMature}\n              onChange={(event) => setIsMature(event.target.value)}\n            >\n              <option value={false}>NIE</option>\n              <option value={true}>TAK</option>\n            </select>\n\n            <label htmlFor=\"select-status\">Status </label>\n            <select\n              id=\"select-status\"\n              value={status}\n              onChange={(event) => setStatus(event.target.value)}\n            >\n              <option value=\"Przyjdzie\">Przyjdzie</option>\n              <option value=\"Nie odpisał\">Nie odpisał</option>\n              <option value=\"Nie wie\">Nie wie</option>\n              <option value=\"Nie przyjdzie\">Nie przyjdzie</option>\n            </select>\n\n            <input type=\"submit\" value=\"Dodaj\" />\n          </div>\n        </fieldset>\n      </form>\n\n      {partyParticipants.length && (\n        <div className=\"container-data\">\n          <PartyParticipantsTable\n            partyParticipants={partyParticipants}\n            sortPartyParticpants={sortPartyParticpants}\n            removeParticipant={removeParticipant}\n            changeName={changeName}\n            changeStatus={changeStatus}\n            changeIsMature={changeIsMature}\n          />\n\n          <Charts partyParticipants={partyParticipants} />\n        </div>\n      )}\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}